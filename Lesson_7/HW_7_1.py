# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, cont_1, cont_2):
        self.cont_1 = cont_1
        self.cont_2 = cont_2

    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in zero_matrix]))

    def __add__(self):
        zero_matrix = [[0, 0, 0, 0],
                        [0, 0, 0, 0],
                        [0, 0, 0, 0],
                        [0, 0, 0, 0]]
        for i in range(len(self.cont_1)):
            for j in range(len(self.cont_2[i])):
                zero_matrix[i][j] = self.cont_1[i][j] + self.cont_2[i][j]
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in zero_matrix]))

new_matrix = Matrix([[10, 20, 30, 40],
                    [5, 10, 35, 45],
                    [12, 22, 10, 42],
                    [8, 7, 4, 10]],
                   [[15, 88, 77, 66],
                    [55, 15, 33, 22],
                    [1, 3, 15, 7],
                    [9, 11, 13, 15]])

print(f'\n')
print(new_matrix.__add__())